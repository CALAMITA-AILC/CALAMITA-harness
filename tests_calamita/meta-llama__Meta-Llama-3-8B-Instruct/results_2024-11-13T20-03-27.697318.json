{
  "results": {
    "MT_CALAMITA_IT_en_it_private": {
      "alias": "MT_CALAMITA_IT_en_it_private",
      "bleu_score,none": 0.3500233727332127,
      "bleu_score_stderr,none": 0.012141274332801388,
      "chrf_score,none": 68.46306764264813,
      "chrf_score_stderr,none": 0.7832433004517001,
      "bleurt_score,none": 0.2947184695731133,
      "bleurt_score_stderr,none": 0.015547291072432103,
      "comet_score,none": 0.880830181473134,
      "comet_score_stderr,none": 0.004001729554379718
    }
  },
  "group_subtasks": {
    "MT_CALAMITA_IT_en_it_private": []
  },
  "configs": {
    "MT_CALAMITA_IT_en_it_private": {
      "task": "MT_CALAMITA_IT_en_it_private",
      "tag": [
        "MT-CALAMITA_task"
      ],
      "dataset_path": "FBK-MT/MT-privateBenchmark4CALAMITA2024",
      "validation_split": "IT",
      "test_split": "IT",
      "process_docs": "def preprocess_dataset(dataset: datasets.Dataset) -> datasets.Dataset:\n    # dataset = dataset.select([i for i in range(4)])      # selecting 4 rows for DEBUG\n    return dataset\n",
      "doc_to_text": "Translate the following sentence into Italian: <On Monday, scientists from the Stanford University School of Medicine announced the invention of a new diagnostic tool that can sort cells by type: a tiny printable chip that can be manufactured using standard inkjet printers for possibly about one U.S. cent each.>\n<Nella giornata di lunedì, alcuni scienziati della Scuola di Medicina dell'Università di Stanford hanno annunciato l'invenzione di un nuovo strumento diagnostico capace di ordinare le cellule in base al tipo: un chip minuscolo che può essere stampato utilizzando stampanti a getto di inchiostro al costo di circa 1 centesimo di dollaro l'uno.>\n\nTranslate the following sentence into Italian: <Lead researchers say this may bring early detection of cancer, tuberculosis, HIV and malaria to patients in low-income countries, where the survival rates for illnesses such as breast cancer can be half those of richer countries.>\n<Secondo i responsabili della ricerca questo strumento potrebbe consentire diagnosi precoci di cancro, tubercolosi, HIV e malaria per i malati che vivono in Paesi a basso reddito. In alcuni di questi Paesi il tasso di sopravvivenza legati a patologie come il cancro al seno può essere addirittura la metà rispetto a quello registrato nei Paesi più abbienti.>\n\nTranslate the following sentence into Italian: <The JAS 39C Gripen crashed onto a runway at around 9:30 am local time (0230 UTC) and exploded, closing the airport to commercial flights.>\n<Il JAS 39C Gripen è precipitato su una pista di atterraggio alle 9:30 circa, ora locale (02:30 UTC), ed è esploso, con la conseguente chiusura dell’aeroporto ai voli commerciali.>\n\nTranslate the following sentence into Italian: <The pilot was identified as Squadron Leader Dilokrit Pattavee.>\n<L'identificazione del pilota ha rivelato che si trattava del capo squadriglia Dilokrit Pattavee.>\n\nTranslate the following sentence into Italian: <{{english}}>",
      "doc_to_target": "{{italian}}",
      "process_results": "def process_results_en_it(doc, results):\n    \"\"\"\n    Process the results of the model and return the metrics. Implementation for the **english to italian** task\n    Args:\n        - doc: the document containing the input and output (keys are the variables from the prompt_template)\n        - results: the output of the model (still dunnow why its a list but it doesn't depend on the batchsize)\n    Returns:\n        - a dictionary containing the metrics (metric_name: metric_value)\n    \"\"\"\n\n    completion = results[0]\n    model_input, reference_out = doc[\"english\"], doc[\"italian\"]\n\n    return _get_metrics(\n        model_input=model_input, \n        reference_out=reference_out, \n        completition=completion,\n    )\n",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "bleu_score",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "chrf_score",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "bleurt_score",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "comet_score",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "\n\n"
        ],
        "do_sample": false
      },
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    }
  },
  "versions": {
    "MT_CALAMITA_IT_en_it_private": 1.0
  },
  "n-shot": {
    "MT_CALAMITA_IT_en_it_private": 0
  },
  "higher_is_better": {
    "MT_CALAMITA_IT_en_it_private": {
      "bleu_score": true,
      "chrf_score": true,
      "bleurt_score": true,
      "comet_score": true
    }
  },
  "n-samples": {
    "MT_CALAMITA_IT_en_it_private": {
      "original": 547,
      "effective": 547
    }
  },
  "config": {
    "model": "hf",
    "model_args": "pretrained=meta-llama/Meta-Llama-3-8B-Instruct,dtype=bfloat16",
    "batch_size": "4",
    "batch_sizes": [],
    "device": null,
    "use_cache": "./tests_calamita/cache/meta-llama__Meta-Llama-3-8B-Instruct",
    "limit": null,
    "bootstrap_iters": 100000,
    "gen_kwargs": null,
    "random_seed": 0,
    "numpy_seed": 1234,
    "torch_seed": 1234,
    "fewshot_seed": 1234
  },
  "git_hash": "b2ecf5d8",
  "date": 1731514642.454923,
  "pretty_env_info": "PyTorch version: 2.5.0+cu121\nIs debug build: False\nCUDA used to build PyTorch: 12.1\nROCM used to build PyTorch: N/A\n\nOS: Rocky Linux 8.10 (Green Obsidian) (x86_64)\nGCC version: (GCC) 12.2.0\nClang version: Could not collect\nCMake version: version 3.26.5\nLibc version: glibc-2.28\n\nPython version: 3.10.8 (main, Mar 17 2023, 17:32:50) [GCC 12.2.0] (64-bit runtime)\nPython platform: Linux-4.18.0-553.5.1.el8_10.x86_64-x86_64-with-glibc2.28\nIs CUDA available: True\nCUDA runtime version: 12.2.91\nCUDA_MODULE_LOADING set to: LAZY\nGPU models and configuration: GPU 0: NVIDIA A100-PCIE-40GB\nNvidia driver version: 550.54.14\ncuDNN version: Could not collect\nHIP runtime version: N/A\nMIOpen runtime version: N/A\nIs XNNPACK available: True\n\nCPU:\nArchitecture:        x86_64\nCPU op-mode(s):      32-bit, 64-bit\nByte Order:          Little Endian\nCPU(s):              64\nOn-line CPU(s) list: 0-63\nThread(s) per core:  1\nCore(s) per socket:  32\nSocket(s):           2\nNUMA node(s):        2\nVendor ID:           GenuineIntel\nCPU family:          6\nModel:               106\nModel name:          Intel(R) Xeon(R) Platinum 8358 CPU @ 2.60GHz\nStepping:            6\nCPU MHz:             3288.691\nBogoMIPS:            5200.00\nVirtualization:      VT-x\nL1d cache:           48K\nL1i cache:           32K\nL2 cache:            1280K\nL3 cache:            49152K\nNUMA node0 CPU(s):   0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62\nNUMA node1 CPU(s):   1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39,41,43,45,47,49,51,53,55,57,59,61,63\nFlags:               fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l3 invpcid_single intel_ppin ssbd mba ibrs ibpb stibp ibrs_enhanced tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid cqm rdt_a avx512f avx512dq rdseed adx smap avx512ifma clflushopt clwb intel_pt avx512cd sha_ni avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local split_lock_detect wbnoinvd dtherm ida arat pln pts avx512vbmi umip pku ospke avx512_vbmi2 gfni vaes vpclmulqdq avx512_vnni avx512_bitalg tme avx512_vpopcntdq la57 rdpid fsrm md_clear pconfig flush_l1d arch_capabilities\n\nVersions of relevant libraries:\n[pip3] numpy==1.24.3\n[pip3] optree==0.13.0\n[pip3] pytorch-lightning==2.4.0\n[pip3] torch==2.5.0+cu121\n[pip3] torchmetrics==0.10.3\n[pip3] triton==3.1.0\n[conda] Could not collect",
  "transformers_version": "4.46.0",
  "upper_git_hash": null,
  "tokenizer_pad_token": [
    "<|eot_id|>",
    "128009"
  ],
  "tokenizer_eos_token": [
    "<|eot_id|>",
    "128009"
  ],
  "tokenizer_bos_token": [
    "<|begin_of_text|>",
    "128000"
  ],
  "eot_token_id": 128009,
  "max_length": 8192,
  "task_hashes": {
    "MT_CALAMITA_IT_en_it_private": "fdbb7a65e57f85b650a82bd33a4de75b9138bc050586dbfec6826dcd65bd873b"
  },
  "model_source": "hf",
  "model_name": "meta-llama/Meta-Llama-3-8B-Instruct",
  "model_name_sanitized": "meta-llama__Meta-Llama-3-8B-Instruct",
  "system_instruction": null,
  "system_instruction_sha": null,
  "fewshot_as_multiturn": false,
  "chat_template": null,
  "chat_template_sha": null,
  "start_time": 10444894.357984032,
  "end_time": 10454875.734855592,
  "total_evaluation_time_seconds": "9981.376871559769"
}